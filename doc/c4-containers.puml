@startuml Add context

!include https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Container.puml

title
    <b>Социальная сеть v1.0.0</b>
    <i>Диаграмма контейнеров</i>
end title


Person(user, пользователь)

System_Ext(frontend, Frontend, "регистрация, аутентификация, взаимодействие с другими пользователями")

Rel(user, frontend, "Взаимодействие с frontend")

System_Boundary(major, "Главный сервис") {
    Container(admin, "Major backend", "Go 1.22", "отвечает за клиентское API и за регистрацию и аутентификацию пользователей")
    Container_Ext(admin_DB, "Data Base", "MongoDB", "отвечает за хранение пользователей")

    Rel_R(admin, admin_DB, " ")
}

Rel(frontend, admin, "Вызов методов", "REST API")

SystemQueue(kafka, "Kafka", "Ответы для публикации")

Rel(admin, kafka, "Отправка событий с просмотрами и лайками")

System_Boundary(statistic, "Сервис статистики") {
    Container(statistics_admin, "Statistic backend", "Go 1.22", "отвечает за подсчет лайков и просмотров")
    Container_Ext(statistics_DB, "Data Base", "Clickhouse", "отвечает за хранение статистики")

    Rel_R(statistics_admin, statistics_DB, " ")
}

Rel(admin, statistics_admin, "Запрос статистики", "gRPC")

Rel(kafka, statistics_DB, "Обработка событий")

Rel(statistics_admin, admin, "Отдача статистики пользователю", "gRPC")

System_Boundary(posts_comments, "Сервис постов и комментариев") {
    Container(posts_comments_admin, "Backend", "Go 1.22", "отвечает за создание/удаление постов и комментариев")
    Container_Ext(posts_comments_DB, "Data Base", "Cassandra", "отвечает за хранение постов и комментариев")

    Rel_R(posts_comments_admin, posts_comments_DB, " ")
}

Rel(admin, posts_comments_admin, "Создание/удаление постов и комментариев", "gRPC")

@enduml